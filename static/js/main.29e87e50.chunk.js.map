{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","getUser","usersFromServer","find","App","useState","userName","setUserName","setTitle","todosFromServer","setTodos","displayName","setDisplayName","displayTitle","setDisplayTitle","useEffect","oldState","state","onSubmit","event","preventDefault","trim","todoObj","Math","max","type","value","placeholder","onChange","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29e87e50.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n      key={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport {\n  ChangeEvent, SyntheticEvent, useEffect, useState,\n} from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const App = () => {\n  const [userName, setUserName] = useState('0');\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n  const [displayName, setDisplayName] = useState(true);\n  const [displayTitle, setDisplayTitle] = useState(true);\n\n  const handleSelectChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setDisplayName(true);\n    setUserName(value);\n  };\n\n  const handleTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setDisplayTitle(true);\n    setTitle(value.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>{}[\\]\\\\/]/gi, ''));\n  };\n\n  const handleSubmit = (event: SyntheticEvent) => {\n    event.preventDefault();\n    const userId = usersFromServer.find(user => userName === user.name)?.id;\n\n    if (title.trim() !== '' && userName !== '0') {\n      const todoObj = {\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title,\n        completed: false,\n        userId: userId || 0,\n        user: getUser(userId || 0),\n      };\n\n      setTodos(oldState => {\n        return [...oldState, todoObj];\n      });\n\n      setUserName('0');\n      setTitle('');\n    }\n\n    setDisplayTitle(title.trim() !== '');\n    setDisplayName(userName !== '0');\n  };\n\n  useEffect(() => {\n    setTodos(oldState => {\n      return oldState.map(state => ({ ...state, user: getUser(state.userId) }));\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Enter the title\"\n            onChange={handleTitleChange}\n          />\n          {(!title.trim() && !displayTitle)\n          && (<span className=\"error\">Please enter a title</span>)}\n\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userName}\n            onChange={handleSelectChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.name} key={user.id}>{user.name}</option>))}\n          </select>\n          {(userName === '0' && !displayName)\n          && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}